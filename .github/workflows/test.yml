name: Tests

on:
  pull_request_target: {}
  push: { branches: [main] }
  workflow_dispatch:

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        packageName:
          - com.andywiecko.burst.triangulator
        projectPath:
          - Samples~/BurstTriangulatorTestProject
        unityVersion:
          - 2022.2.15f1
        testMode:
          - editmode
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - name: Preparing sample project
        run: |
          echo "############################"
          echo "# Preparing sample project #"
          echo "############################"
          echo "Creating dir ${{ matrix.projectPath }}/Packages/${{ matrix.packageName }}"
          mkdir ${{ matrix.projectPath }}/Packages/${{ matrix.packageName }}
          echo "Copying package data"
          cp -r `ls -I Samples~` ${{ matrix.projectPath }}/Packages/${{ matrix.packageName }}
          ls -alF ${{ matrix.projectPath }}/Packages/${{ matrix.packageName }}
      - uses: game-ci/unity-test-runner@v4
        id: tests
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
      - uses: actions/upload-artifact@v1
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
