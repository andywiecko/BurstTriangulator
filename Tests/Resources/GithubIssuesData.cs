using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using Unity.Mathematics;
using UnityEngine;

namespace andywiecko.BurstTriangulator.Editor.Tests
{
    public static class GithubIssuesData
    {
        // Input for this test is grabbed from issue #30 from @mduvergey user.
        // https://github.com/andywiecko/BurstTriangulator/issues/30
        // This test tests editor hanging problem reported in issue #30 and #31.
        //
        // UPDATE: Thanks to the recent fix, this input will no longer cause the algorithm to hang,
        //         unless "max iters" are intentionally reduced.
        public static readonly (double2[] points, int[] constraints) Issue30 = (
            points: new double2[]
            {
                new (14225.59f, -2335.27f), new (13380.24f, -2344.72f), new (13197.35f, -2119.65f),
                new (11750.51f, -2122.18f), new (11670.1f, -2186.25f), new (11424.88f, -2178.53f),
                new (11193.54f, -2025.36f), new (11159.36f, -1812.22f), new (10956.29f, -1731.62f),
                new (10949.03f, -1524.29f), new (10727.71f, -1379.53f), new (10532.48f, -1145.83f),
                new (10525.18f, -906.69f), new (10410.57f, -750.73f), new (10629.48f, -657.33f),
                new (10622f, -625.7f), new (10467.05f, -552.15f), new (10415.75f, -423.21f),
                new (10037.01f, -427.11f), new (9997.4f, -487.33f), new (9788.02f, -539.44f),
                new (9130.03f, -533.95f), new (8905.69f, -490.95f), new (8842.1f, -396.11f),
                new (8410.81f, -407.12f), new (8211.88f, -583.32f), new (7985.37f, -588.47f),
                new (7880.46f, -574.94f), new (7200.87f, -574.14f), new (6664.29f, -637.89f),
                new (6351.84f, -483.61f), new (6324.37f, -143.48f), new (6093.94f, -152.8f),
                new (5743.03f, 213.65f), new (5725.63f, 624.21f), new (5562.64f, 815.17f),
                new (5564.65f, 1145.66f), new (4846.4f, 1325.89f), new (4362.98f, 1327.97f),
                new (5265.89f, 267.31f), new (5266.32f, -791.39f), new (3806f, -817.38f),
                new (3385.84f, -501.25f), new (3374.35f, -372.48f), new (3555.98f, -321.11f),
                new (3549.9f, -272.35f), new (3356.27f, -221.45f), new (3352.42f, 13.16f),
                new (1371.39f, 5.41f), new (1362.47f, -191.23f), new (1188.9f, -235.72f),
                new (1180.86f, -709.59f), new (132.26f, -720.07f), new (1.94f, -788.66f),
                new (-1240.12f, -779.03f), new (-1352.26f, -973.64f), new (-1665.17f, -973.84f),
                new (-1811.91f, -932.75f), new (-1919.98f, -772.61f), new (-2623.09f, -782.31f),
                new (-3030.54f, -634.38f), new (-3045.53f, -52.71f), new (-3969.83f, -61.28f),
                new (-6676.96f, 102.16f), new (-7209.27f, 100.12f), new (-7729.39f, 178.02f),
                new (-8228.73f, 126.39f), new (-8409.52f, 164.47f), new (-9432.81f, 168.43f),
                new (-9586.02f, 116.14f), new (-10758.65f, 110.23f), new (-10894.94f, 63.53f),
                new (-11737.45f, 60.54f), new (-11935.7f, 1.79f), new (-12437.14f, -4.33f),
                new (-12832.19f, 41.15f), new (-13271.23f, 30.64f), new (-13478.52f, 65.91f),
                new (-13729f, 65.71f), new (-13846.23f, 21.68f), new (-14000.3f, 62.86f),
                new (-15224.52f, 58.78f), new (-15232.59f, -142.28f), new (-4326.12f, -232.09f),
                new (-4083.7f, -441.37f), new (-3467.35f, -478.48f), new (-3040.92f, -1160.16f),
                new (7192.14f, -1332.7f), new (7249.66f, -939.11f), new (8399.41f, -932.84f),
                new (8816.72f, -830.49f), new (9861.58f, -835.71f), new (10065.59f, -1110.57f),
                new (10052.32f, -2118.14f), new (9006.64f, -2125.78f), new (8818.37f, -2203.58f),
                new (8846.09f, -2620.2f), new (14244.65f, -2650.96f)
            },
            constraints: new[]
            {
                97, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18,
                18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33,
                33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48,
                48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
                63, 64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78,
                78, 79, 79, 80, 80, 81, 81, 82, 82, 83, 83, 84, 84, 85, 85, 86, 86, 87, 87, 88, 88, 89, 89, 90, 90, 91, 91, 92, 92, 93,
                93, 94, 94, 95, 95, 96, 96, 97
            }
        );

        public static readonly (double2[] points, int[] constraints) Issue31 = (
            points: new double2[]
            {
                new (31.28938f, 37.67612f), new (31.79285f, 37.00624f), new (32.03879f, 36.60557f),
                new (32.29923f, 36.36939f), new (32.58526f, 36.42342f), new (32.876f, 36.53085f),
                new (33.42577f, 36.38619f), new (33.88485f, 35.21272f), new (34.62434f, 34.02968f),
                new (34.73527f, 33.69278f), new (34.86366f, 33.55389f), new (35.10379f, 33.08732f),
                new (35.35777f, 32.77784f), new (35.69171f, 32.50069f), new (35.84656f, 32.22465f),
                new (36.01643f, 32.11908f), new (36.17846f, 31.92439f), new (36.32175f, 31.51735f),
                new (36.49083f, 31.40269f), new (36.6428f, 31.09395f), new (36.98143f, 30.87008f),
                new (37.34995f, 30.98518f), new (37.65298f, 30.35742f), new (38.14125f, 29.79839f),
                new (38.30097f, 29.57764f), new (38.63807f, 29.33636f), new (38.79191f, 29.04884f),
                new (38.95393f, 28.85409f), new (39.28638f, 28.56006f), new (39.44593f, 28.33743f),
                new (39.59904f, 28.04167f), new (39.76351f, 27.87474f), new (40.23344f, 27.10765f),
                new (40.5593f, 26.7389f), new (40.64825f, 26.77288f), new (40.15792f, 28.3197f),
                new (40.47878f, 27.74801f), new (40.6029f, 27.9564f), new (40.46587f, 28.58052f),
                new (40.49842f, 29.02806f), new (40.85061f, 29.12524f), new (41.09647f, 28.99164f),
                new (41.32619f, 28.90017f), new (41.62305f, 29.14183f), new (41.9069f, 29.41749f),
                new (42.3455f, 29.289f), new (42.62182f, 29.07582f), new (42.94831f, 28.73164f),
                new (43.10726f, 28.825f), new (43.09475f, 29.11192f), new (43.03548f, 29.52093f),
                new (43.47666f, 28.87722f), new (43.68863f, 28.83212f), new (44.24405f, 30.16822f),
                new (44.15243f, 30.4401f), new (44.13583f, 30.68668f), new (43.97319f, 31.2235f),
                new (43.59188f, 32.07505f), new (43.55514f, 32.32842f), new (43.28082f, 32.9029f),
                new (43.19778f, 33.17189f), new (42.99816f, 33.4802f), new (42.90062f, 33.75408f),
                new (42.84206f, 34.01482f), new (42.60212f, 34.33672f), new (42.51172f, 34.60819f),
                new (42.49178f, 34.8559f), new (42.44653f, 35.11214f), new (42.40163f, 35.85024f),
                new (42.3139f, 36.1208f), new (42.2475f, 36.86615f), new (42.09885f, 37.39825f),
                new (41.93857f, 37.69329f), new (41.9395f, 38.41592f), new (41.74668f, 39.06109f),
                new (41.71388f, 39.41131f), new (41.4817f, 39.82877f), new (41.40123f, 40.19506f),
                new (41.83162f, 40.72823f), new (41.72264f, 41.10414f), new (41.74435f, 41.43597f),
                new (41.68886f, 41.79384f), new (41.49154f, 42.19954f), new (41.38077f, 42.57606f),
                new (41.07294f, 43.35818f), new (40.84647f, 43.77372f), new (40.94663f, 44.0791f),
                new (40.84524f, 44.45245f), new (39.73372f, 45.59874f), new (39.7615f, 45.89402f),
                new (39.86456f, 46.3304f), new (39.79302f, 46.43954f), new (39.95979f, 46.8737f),
                new (40.02057f, 47.10924f), new (39.68147f, 46.96014f), new (39.87912f, 47.57381f),
                new (39.88906f, 47.83566f), new (39.62033f, 47.85281f), new (39.28307f, 47.74151f),
                new (38.99869f, 47.72932f), new (38.72726f, 47.7414f), new (37.57701f, 47.14798f),
                new (37.24718f, 47.0506f), new (37.07909f, 47.25636f), new (36.70338f, 47.07301f),
                new (36.64832f, 47.4906f), new (36.43682f, 47.61499f), new (36.1853f, 47.66438f),
                new (35.82184f, 47.50399f), new (35.3458f, 47.65338f), new (35.14989f, 47.98354f),
                new (35.08235f, 48.16993f), new (34.95149f, 48.71061f), new (34.80748f, 49.13337f),
                new (35.23618f, 45.39426f), new (35.2403f, 45.17966f), new (34.40559f, 48.73275f),
                new (34.30258f, 48.75045f), new (34.44608f, 47.66825f), new (34.40862f, 47.59851f),
                new (34.21555f, 47.40396f), new (33.79879f, 47.39106f), new (33.84159f, 47.00494f),
                new (33.46966f, 46.95563f), new (33.17641f, 47.0181f), new (32.9339f, 47.03938f),
                new (32.56659f, 46.98632f), new (31.7903f, 47.26541f), new (31.56507f, 47.27264f),
                new (31.26646f, 47.33947f), new (31.65442f, 46.67304f), new (31.69027f, 46.29256f),
                new (32.24787f, 45.48835f), new (32.47871f, 44.59815f), new (32.53637f, 44.19995f),
                new (32.54522f, 43.84141f), new (32.44212f, 43.57378f), new (32.21579f, 43.47334f),
                new (31.94443f, 43.40946f), new (31.53552f, 43.17303f), new (30.83317f, 43.17491f),
                new (30.61916f, 43.06446f), new (30.34215f, 43.00517f), new (30.04128f, 42.681f),
                new (30.19507f, 41.98758f), new (29.75365f, 41.77756f), new (29.58416f, 41.34669f),
                new (29.70014f, 40.94119f), new (29.99722f, 40.84808f), new (30.21854f, 40.72022f),
                new (29.90438f, 40.11747f), new (29.82732f, 39.62344f), new (30.09426f, 39.28717f),
                new (30.51098f, 39.01957f), new (30.38978f, 38.73465f), new (30.38398f, 38.04395f),
                new (30.40719f, 37.85884f), new (30.80989f, 37.99457f), new (31.34938f, 38.09515f)
            },
            constraints: new[]
            {
                0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14,
                15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26,
                27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38,
                39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50,
                51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62,
                63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72, 73, 73, 74, 74,
                75, 75, 76, 76, 77, 77, 78, 78, 79, 79, 80, 80, 81, 81, 82, 82, 83, 83, 84, 84, 85, 85, 86, 86,
                87, 87, 88, 88, 89, 89, 90, 90, 91, 91, 92, 92, 93, 93, 94, 94, 95, 95, 96, 96, 97, 97, 98, 98,
                99, 99, 100, 100, 101, 101, 102, 102, 103, 103, 104, 104, 105, 105, 106, 106, 107, 107, 108, 108,
                109, 109, 110, 110, 111, 111, 112, 112, 113, 113, 114, 114, 115, 115, 116, 116, 117, 117, 118, 118,
                119, 119, 120, 120, 121, 121, 122, 122, 123, 123, 124, 124, 125, 125, 126, 126, 127, 127, 128, 128,
                129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138,
                139, 139, 140, 140, 141, 141, 142, 142, 143, 143, 144, 144, 145, 145, 146, 146, 147, 147, 148, 148,
                149, 149, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 0
            }
        );

        private static double2[] LoadResource(string name)
        {
            var lines = Resources.Load<TextAsset>(name).text.Split('\n');
            var points = new double2[lines.Length];

            for (int i = 0; i < lines.Length; i++)
            {
                var r = lines[i].Split(',');
                var x = double.Parse(r[0], CultureInfo.InvariantCulture);
                var y = double.Parse(r[1], CultureInfo.InvariantCulture);
                points[i] = new(x, y);
            }

            return points;
        }
        private static double2[] cacheIssue105;
        public static (double2[] points, int[] constraints) Issue105 => (
            cacheIssue105 ??= LoadResource(nameof(Issue105)),
            cacheIssue105.SelectMany((_, i) => new[] { i, (i + 1) % cacheIssue105.Length }).ToArray()
        );

        public static readonly (double2[] points, int[] constraints, double2[] holes) Issue111 = (
            points: new double2[]
            {
                new(16.5f,1.5f),
                new(16.5f,2.5f),
                new(7.5f,2.5f),
                new(7.5f,8.5f),
                new(0.5f,8.5f),
                new(0.5f,15.5f),
                new(7.5f,15.5f),
                new(7.5f,20.5f),
                new(16.5f,20.5f),
                new(16.5f,21.5f),
                new(24.5f,21.5f),
                new(24.5f,20.5f),
                new(33.5f,20.5f),
                new(33.5f,15.5f),
                new(39.5f,15.5f),
                new(39.5f,8.5f),
                new(33.5f,8.5f),
                new(33.5f,2.5f),
                new(24.5f,2.5f),
                new(24.5f,1.5f),
                new(15.5f,15.5f),
                new(25.5f,15.5f),
                new(25.5f,18.5f),
                new(15.5f,18.5f),
                new(15.5f,4.5f),
                new(25.5f,4.5f),
                new(25.5f,7.5f),
                new(15.5f,7.5f),
                new(10.5f,6.5f),
                new(12.5f,6.5f),
                new(12.5f,17.5f),
                new(10.5f,17.5f),
                new(28.5f,6.5f),
                new(30.5f,6.5f),
                new(30.5f,17.5f),
                new(28.5f,17.5f),
                new(0.5f,11.5f),
                new(20.5f,21.5f),
                new(39.5f,11.5f),
                new(20.5f,1.44f),
            },
            constraints: new[]
            {
                0,1, 1,2, 2,3, 3,4, 36,5, 5,6, 6,7, 7,8, 8,9, 37,10, 10,11, 11,12, 12,13, 13,14, 38,15, 15,16, 16,17, 17,18, 18,19, 39,0, 20,21, 21,22, 22,23, 23,20, 24,25, 25,26, 26,27, 27,24, 28,29, 29,30, 30,31, 31,28, 32,33, 33,34, 34,35, 35,32, 4,36, 9,37, 14,38, 19,39
            },
            holes: new double2[]
            {
                new(16.5f,16.5f),
                new(16.5f,5.5f),
                new(11.5f,7.5f),
                new(29.5f,7.5f),
            }
        );

        public static readonly (Vector3[] positions, int[] triangles) Issue134_Case2 = (
            positions: new[]
            {
                (112.322998, 0, 748.927002),(-184.738998, 0, -940.067993),(120.195, 0, 747.504028),(-190.606995, 0, -972.541992),(-198.479004, 0, -971.119995),(102.252998, 0, 468.243988),(159.557999, 0, 740.390991),(151.684998, 0, 741.814026),(-151.244003, 0, -979.655029),(102.252563, 0, 468.24408),(-153.248993, 0, -945.757996),(-159.117004, 0, -978.231995),(70.7630005, 0, 473.93399)
            }.Select(i => new Vector3((float)i.Item1, (float)i.Item2, (float)i.Item3)).ToArray(),
            triangles: new[]
            {
                12, 2, 9, 7, 9, 2, 3, 1, 11, 10, 11, 1, 8, 11, 10, 9, 8, 10, 5, 8, 9, 6, 8, 5, 7, 6, 5, 4, 0, 3, 1, 3, 0, 2, 1, 0
            }
        );

        public static readonly (Vector3[] positions, int[] triangles) Issue134_Case3 = (
            positions: new[]
            {
                (-30.44487, -1.46142578, -97.6524963),(1.08314514, -3.3125, -73.1804962),(16.9091339, -0.121826172, -161.270493),(49.7971344, -2.57128906, -135.523499),(25.2171478, -0.747070313, -155.560486),(-15.9738617, -4.24267578, 68.3145065),(-11.4918671, -4.00024414, 70.3805008),(-15.9238586, -4.26611328, 68.1485062),(-13.5338593, -4.89599609, 63.7455063),(-10.4898529, -5.45751953, 59.8824997),(-11.4118652, -4.02197266, 70.2294998),(-6.7318573, -4.9362793, 63.9205017),(-6.93585205, -5.94384766, 56.600502),(-3.01585388, -6.34814453, 53.9384995),(-1.83985901, -5.5234375, 59.9995041),(20.3731384, -8.39941406, 40.6725006),(3.31114197, -5.82128906, 58.1915054),(10.1521454, -6.77978516, 51.7125015),(9.74613953, -6.71508789, 52.1535034),(21.1841431, -7.7734375, 45.2675018),(9.58013916, -6.63891602, 52.6955032),(21.9401398, -8.57763672, 39.4865036),(21.9001465, -7.81738281, 44.9965057),(22.5751343, -7.83007813, 44.9505005),(8.7661438, -5.86914063, 58.2215042),(9.63113403, -6.56005859, 53.2714996),(9.87614441, -6.48754883, 53.8125),(23.3091431, -8.78125, 38.1054993),(23.1741333, -7.81445313, 45.1054993),(23.657135, -7.77270508, 45.4425049),(14.5731354, -5.70410156, 59.815506),(24.4321442, -8.99462891, 36.6324997),(10.2911377, -6.4309082, 54.251503),(23.9891357, -7.70703125, 45.940506),(24.1301422, -7.62060547, 46.5774994),(10.8541412, -6.39892578, 54.5225067),(13.9531403, -6.29980469, 55.4555054),(16.7521362, -6.17211914, 56.574501),(24.4911346, -5.94580078, 58.7475052),(19.7341461, -5.1965332, 63.8515015),(19.3211365, -6.00048828, 57.9955063),(21.7281342, -5.76953125, 59.8345032),(22.6051331, -4.53076172, 68.8775024),(22.2661438, -5.7331543, 60.1355057),(22.8631439, -5.72875977, 60.2095032),(23.584137, -3.76098633, 74.5265045),(23.4501343, -5.75170898, 60.0825043),(23.9611359, -5.79833984, 59.7795029),(25.2611389, -9.20458984, 35.1695023),(25.6401367, -1.83496094, 88.6355057),(24.3301392, -5.86425781, 59.3255005),(23.0671387, -2.94213867, 80.4275055),(21.4501343, -2.12939453, 86.2105026),(21.3691406, -2.10424805, 86.388504),(28.5211334, -8.10180664, 43.3895035),(28.8051453, -8.39013672, 41.3185043),(29.2921448, -8.67089844, 39.315506),(29.9801331, -8.91943359, 37.5605011),(43.9091339, -8.50830078, 2.40950394),(28.4421387, -7.83105469, 45.3475037),(27.2861481, -2.35742188, 84.9575043),(28.5781403, -2.86376953, 81.3745041),(29.6541443, -3.84130859, 74.3615036),(29.4281464, -3.36328125, 77.8105011),(50.2001343, -8.56274414, 2.31850433),(47.0931396, -8.1550293, -3.65249634),(49.6811371, -7.73803711, -10.6274967),(51.8231354, -7.27587891, -18.2504959),(52.861145, -8.25195313, -2.99049759),(53.6661377, -6.78637695, -26.2544975),(55.3051453, -7.85107422, -9.68949699),(70.2661438, -4.02392578, -110.5215),(57.3981476, -7.41333008, -16.9184971),(59.0051422, -6.99194336, -23.8184967),(76.5481415, -4.54882813, -112.730499),(80.6451416, -5.01416016, -129.499496),(81.0011444, -5.04101563, -129.259491),(70.1991425, -4.02319336, -111.072495),(69.8021393, -3.9934082, -111.375496),(69.2271423, -3.94799805, -111.497498),(68.6261444, -3.89941406, -111.503494),(68.1541443, -3.86108398, -111.458496),(67.9621429, -3.84521484, -111.429497),(67.5811462, -3.81665039, -111.677498),(-302.550842, -6.1496582, 436.173523),(-272.499878, -6.14916992, 450.022522),(-262.192871, -6.59179688, 346.4375),(-260.612854, -6.20410156, 430.580505),(-249.12886, -3.05566406, 285.704529),(-250.461868, -6.25048828, 419.261475),(-248.691849, -6.20214844, 436.949524),(-241.236862, -6.2578125, 424.973511),(-248.226852, -6.20214844, 437.191528),(-235.636856, -6.44848633, 393.693481),(-266.918884, -0.810546875, 276.116516),(-274.502869, -6.57080078, 340.8255),(-278.209839, -6.56103516, 339.776489),(-281.562866, -6.63012695, 324.238525),(-289.046814, -6.62060547, 320.276489),(-281.999817, -6.54394531, 340.040527),(-284.805847, -6.58691406, 329.8125),(-285.386841, -6.58129883, 330.412476),(-285.537842, -6.52197266, 341.413513),(-286.208862, -6.57568359, 330.858521),(-287.180847, -6.57006836, 331.133484),(-288.206848, -6.56542969, 331.216492),(-288.491821, -6.49755859, 343.696533),(-289.195862, -6.56201172, 331.087524),(-290.529846, -6.47314453, 346.685486),(-295.603821, -6.4765625, 342.145508),(-296.193848, -6.45874023, 344.973511),(-312.16687, -6.19238281, 412.469482),(-295.71582, -6.4909668, 339.346497),(-313.886841, -6.22558594, 396.748474),(-319.645874, -6.10791016, 447.226501),(-296.572815, -6.50097656, 336.776489),(-322.566833, -6.05541992, 469.59552),(-298.21582, -6.50585938, 334.639526),(-300.686829, -6.50366211, 333.137512),(-321.295837, -6.44873047, 327.466492),(-321.730835, -6.47802734, 321.659485),(-323.158875, -6.44433594, 326.85553),(-324.902832, -6.44091797, 326.121521),(-326.562866, -6.43847656, 325.327515),(-328.171814, -6.43603516, 324.535522),(-329.080872, -6.4831543, 315.032532),(-329.832825, -6.43408203, 323.642517),(-331.414856, -6.43261719, 322.67749),(-332.419861, -6.51806641, 305.932495),(-333.063843, -6.43164063, 321.590515),(-345.775818, -6.38916016, 319.692505),(-277.346863, -6.05908203, 488.528503),(-312.82782, -6.06103516, 471.521484),(-313.876831, -5.87866211, 553.273499),(-314.052856, -5.85791016, 562.62146),(-314.178833, -5.85766602, 562.638489),(-318.006836, -6.03271484, 481.925476),(-318.859863, -6.03369141, 481.091492),(-319.277832, -5.85717773, 560.44751),(-320.661865, -6.03710938, 478.673523),(-322.276855, -6.04418945, 474.7995),(-326.304871, -6.10400391, 446.045532),(-328.328857, -5.82421875, 571.211487),(-332.355835, -6.02148438, 480.409485),(-334.789856, -5.82641602, 567.274475),(-340.608826, -5.42993164, 644.778503),(-342.137817, -5.82470703, 564.773499),(-340.576843, -5.42480469, 657.423462),(-336.019836, -5.38183594, 645.000488),(-335.496826, -5.3762207, 645.33551),(-348.567871, -5.5090332, 655.722473),(-348.655823, -5.51025391, 655.168518),(-240.669846, 25.2199707, 103.274506),(-231.097855, 22.9990234, 109.155502),(-234.325851, 23.6782227, 93.2865067),(-225.532852, 21.637207, 98.5025024),(-229.09285, 22.7729492, 157.86351),(-250.409866, 27.7275391, 146.518509),(-228.450851, 22.6333008, 160.097504),(-207.066849, 17.5268555, 144.400497),(-91.1898651, -4.51660156, -40.2344971),(-205.185867, 17.0712891, 141.761505),(-202.613846, 16.4536133, 139.157501),(-230.110855, 18.9924316, 187.914505),(-199.719864, 15.7614746, 136.836502),(-231.015854, 18.5024414, 190.096497),(-231.74086, 17.9711914, 192.457504),(-232.247849, 17.4042969, 194.971497),(-196.869858, 15.0822754, 135.047501),(-240.945847, 20.0161133, 183.593506),(-129.572861, -0.915527344, 99.9714966),(-232.495865, 16.8071289, 197.615509),(-232.46785, 13.0244141, 214.331497),(-128.886856, -1.07788086, 99.7575073),(-128.197861, -1.23950195, 99.8444977),(-127.591873, -1.38037109, 100.167496),(-127.152847, -1.48120117, 100.656509),(-126.965866, -1.52197266, 101.245499),(-231.783859, 12.4174805, 217.001511),(-242.023849, 19.4343262, 186.184509),(-242.996872, 18.7167969, 189.373505),(-243.41185, 10.7998047, 224.367508),(-243.682846, 17.9462891, 192.791504),(-243.896866, 17.2050781, 196.070496),(-230.260849, 11.770752, 219.830505),(-215.791855, 7.41552734, 238.80751),(-228.179855, 11.1469727, 222.5495),(-225.823868, 10.607666, 224.887497),(-223.474869, 10.2163086, 226.574509),(-208.304855, 8.41113281, 234.267502),(-214.390854, 7.08959961, 240.221512),(-214.027847, 6.67041016, 242.06749),(-206.006851, 8.39941406, 234.276505),(-204.116867, 8.63378906, 233.20549),(-214.284866, 6.25268555, 243.918503),(-214.744858, 5.93212891, 245.343491),(-214.99086, 5.80419922, 245.913498),(-237.008865, -6.68896484, 347.669495),(-224.767868, 6.74951172, 241.918503),(-112.05986, -4.97216797, 112.0755),(-237.268845, -6.6875, 347.736511),(-202.807846, 9.03369141, 231.413498),(-202.254868, 9.51806641, 229.262497),(-236.992874, -6.68896484, 347.716492),(-151.698868, 4.51757813, 145.925507),(-120.810867, -2.93920898, 107.179504),(-188.284866, 13.0678711, 135.760498),(-202.630875, 10.0058594, 227.11351),(-177.984848, 10.6186523, 130.26651),(-204.109848, 10.4157715, 225.329514),(-219.288864, 12.2836914, 217.359497),(-222.871872, 16.0170898, 200.928497),(-127.116867, -1.48339844, 101.865509),(-118.489853, -3.50317383, 103.538498),(-106.643845, -6.29907227, 101.398499),(-106.241867, -6.39379883, 101.330505),(-102.93486, -7.26586914, 82.5555038),(-98.3488617, -8.32446289, 86.4545059),(-98.5378571, -8.28173828, 86.1115036),(-43.734848, -9.06567383, 24.4445038),(-40.91185, -2.19458008, -84.4954987),(7.30413818, -6.26635742, -27.4694977),(6.04414368, -4.51220703, -54.9824982),(20.3681335, -4.34838867, -59.7344971),(67.9631348, -3.82324219, -108.661499),(67.5811462, -3.81665039, -111.677498),(71.2731476, -4.2565918, -129.399506),(67.9621429, -3.84521484, -111.429497),(68.1541443, -3.86108398, -111.458496),(80.6451416, -5.01416016, -129.499496),(69.8951416, -4.00048828, -111.304497),(68.6261444, -3.89941406, -111.503494),(69.2271423, -3.94799805, -111.497498),(69.8021393, -3.9934082, -111.375496),(72.6931458, -4.42236328, -135.785492),(91.3151398, -6.08081055, -155.113495),(72.0791473, -4.44189453, -144.401489),(70.0501404, -4.3515625, -153.580505),(67.2241364, -4.18798828, -161.653503),(81.0011444, -5.04101563, -129.259491),(64.2211456, -3.98779297, -166.952499),(81.0011444, -5.01879883, -126.491493),(79.8201447, -4.91064453, -124.876495),(264.276154, -13.1835938, -378.272522),(257.929138, -13.2529297, -382.108521),(56.131134, -3.73022461, -216.354492),(47.8741455, -2.81445313, -185.254501),(44.2611389, -2.64257813, -200.231491),(43.2501373, -2.57617188, -202.1465),(44.1241455, -2.61035156, -197.6035),(42.4191437, -2.69335938, -225.132492),(43.3681335, -2.52783203, -194.917496),(42.5261383, -2.44335938, -192.826492),(39.8141479, -2.30957031, -203.475494),(35.1171417, -1.9362793, -204.219498),(30.9701385, -1.60400391, -204.545502),(29.186142, -1.46044922, -204.617493),(42.1271362, -2.40429688, -191.98349),(26.2431335, -0.823242188, -154.724487),(25.2171478, -0.747070313, -155.560486),(18.6201477, -0.250732422, -160.094498),(-207.348862, -6.72607422, 363.659485),(-207.55986, -6.72485352, 363.724487),(-223.438858, -6.60766602, 373.377502),(-215.302872, -6.61914063, 377.534485),(-215.026871, -6.61938477, 377.688477),(-207.349869, -6.72558594, 363.729492),(-232.44487, -6.48876953, 388.6745),(-226.920853, -6.46044922, 398.20752),(-223.981857, -6.49804688, 393.420532),(-226.696854, -6.46069336, 398.315491)
            }.Select(i => new Vector3((float)i.Item1, (float)i.Item2, (float)i.Item3)).ToArray(),
            triangles: new[]
            {
                0,1,2,3,2,1,4,2,3,5,6,7,8,7,6,9,8,6,10,9,6,11,9,10,12,9,11,13,12,11,14,13,11,15,13,14,16,15,14,17,15,16,18,17,16,19,15,17,20,18,16,21,15,19,22,21,19,23,21,22,24,20,16,20,24,25,25,24,26,27,21,23,28,27,23,29,27,28,30,26,24,31,27,29,32,26,30,33,31,29,34,31,33,35,32,30,36,35,30,37,36,30,38,31,34,39,37,30,40,37,39,41,40,39,42,41,39,43,41,42,44,43,42,45,44,42,46,44,45,47,46,45,48,31,38,47,45,49,48,38,49,50,47,49,38,50,49,45,51,49,51,52,49,53,49,52,54,48,49,55,48,54,56,48,55,57,48,56,58,48,57,59,54,49,60,59,49,60,61,59,62,59,61,63,62,61,64,58,57,65,58,64,66,65,64,67,66,64,68,67,64,69,67,68,70,69,68,71,69,70,72,71,70,73,71,72,74,71,73,74,75,71,76,75,74,71,75,77,77,75,78,78,75,79,79,75,80,80,75,81,81,75,82,83,82,75,84,85,86,87,86,85,87,88,86,89,88,87,87,90,89,91,89,90,92,91,90,93,88,89,88,94,86,86,94,95,95,94,96,96,94,97,98,97,94,96,97,99,97,100,99,100,101,99,99,101,102,101,103,102,103,104,102,104,105,102,102,105,106,105,107,106,106,107,108,108,107,109,109,110,108,108,110,111,109,107,112,110,113,111,111,113,114,112,107,115,114,113,116,115,107,117,117,107,118,118,107,119,107,120,119,119,120,121,121,120,122,122,120,123,123,120,124,120,125,124,124,125,126,126,125,127,125,128,127,127,128,129,130,129,128,131,132,133,133,132,134,134,132,135,132,136,135,136,137,135,135,137,138,137,139,138,139,140,138,140,116,138,116,141,138,141,116,113,138,141,142,141,143,142,142,143,144,144,143,145,146,145,143,145,146,147,148,145,147,149,148,147,147,146,150,151,150,146,152,153,154,155,154,153,156,155,153,153,157,156,158,155,156,155,158,159,160,155,159,161,160,159,162,160,161,159,158,163,164,160,162,163,158,165,165,158,166,166,158,167,168,160,164,158,169,167,170,160,168,171,167,169,171,169,172,173,160,170,174,160,173,175,160,174,176,160,175,177,160,176,172,169,178,169,179,178,179,180,178,178,180,181,180,182,181,183,181,182,184,178,181,185,184,181,186,184,185,187,186,185,188,187,185,189,188,185,190,189,185,191,189,190,189,191,192,192,191,193,191,194,193,194,195,193,195,196,193,193,196,197,196,198,197,199,193,197,197,198,200,88,200,198,201,193,199,200,88,93,202,201,199,203,200,93,204,202,199,205,204,199,206,202,204,202,206,207,208,206,204,207,206,209,209,206,210,211,210,206,212,204,205,177,212,205,205,160,177,213,160,205,214,160,213,215,160,214,216,160,215,215,217,216,218,216,217,219,160,216,220,160,219,221,220,219,222,220,221,223,222,221,224,223,221,225,223,224,223,225,226,227,225,224,228,227,224,229,226,225,230,228,224,231,228,230,232,231,230,233,232,230,234,226,229,229,235,234,234,235,236,236,235,237,237,235,238,239,235,229,238,235,240,241,235,239,239,242,241,243,235,241,244,235,243,235,245,240,240,245,246,246,245,247,247,245,248,247,249,246,245,250,248,249,251,246,251,252,246,248,250,253,253,250,254,254,250,255,256,255,250,252,257,246,246,257,258,258,257,259,260,259,257,261,203,262,262,203,263,263,203,93,264,262,263,265,262,264,262,265,266,267,263,93,93,268,267,269,267,268,270,269,268
            }
        );

        public static readonly (Vector3[] positions, int[] triangles) Issue134_Case4 = (
            positions: new[]
            {
                (226.330109, 0.821289063, -282.009003),(226.251312, 0.846191406, -281.833679),(226.343109, 0.822265625, -282.002014),(226.249908, 0.846435547, -281.831116),(226.250107, 0.846435547, -281.830994),(226.072113, 0.835449219, -281.924988),(215.821106, 3.58276367, -262.708984),(-162.210907, -3.58837891, -15.9089966),(-147.178864, -3.53198242, 16.3529968),(-144.375885, -3.59863281, -12.3529968),(-142.592865, -3.4465332, 56.9989929),(-163.993866, -3.5456543, 2.63500977),(-173.675873, -2.44628906, 1.36499023),(-185.650909, 1.37597656, 50.1399841),(-134.184906, -3.52050781, 27.5310059),(-113.103912, -3.5456543, 25.776001),(-113.276886, -3.54418945, 26.2819824),(-114.566864, -3.53173828, 31.3410034),(-114.5289, -3.53198242, 31.2529907),(167.520111, 2.15136719, -257.049988),(167.166107, 2.17211914, -243.819),(167.520111, 2.18725586, -249.639999),(164.158112, 1.85058594, -233.763),(168.758118, 2.38232422, -240.996002),(185.036118, 4.48071289, -222.296997),(172.474121, 2.8515625, -238.703003),(176.543121, 3.36303711, -236.762009),(181.674118, 4.01171875, -233.410004),(186.274109, 4.58569336, -231.999008),(185.920105, 4.59985352, -220.180008),(185.920105, 4.61352539, -217.35701),(186.097107, 4.67431641, -209.417999),(189.636108, 5.07617188, -216.475006),(191.228104, 5.19311523, -232.705002),(193.882111, 5.59008789, -218.416),(196.359116, 5.80322266, -237.292007),(197.24411, 6.01489258, -216.299011),(197.598114, 6.00170898, -227.942001),(212.636108, 3.20092773, -265.694),(197.951111, 6.06079102, -224.766006),(200.782104, 6.42431641, -221.766998),(199.721115, 6.2409668, -232.528),(226.072113, 0.835449219, -281.924988),(221.66011, 0.634033203, -283.687988),(224.20311, 0.717529297, -282.90802),(220.952118, -0.162109375, -289.509003),(211.221115, 2.75219727, -269.046021),(206.090103, 2.38745117, -272.044983),(194.767105, -1.73852539, -302.73999),(192.820114, -1.25805664, -299.389008),(189.400116, -1.37988281, -300.51001),(189.198105, -1.34057617, -300.237),(189.118103, -1.31884766, -300.085999),(185.240112, -1.52880859, -301.873993),(184.296112, -1.5625, -302.183014),(182.736115, 1.51391602, -279.983002),(162.640106, 1.5402832, -258.997009),(159.558105, 1.2800293, -234.469009),(156.197113, 0.867431641, -234.115997),(153.720123, 0.570556641, -232.352005),(152.304108, 0.411621094, -229.177002),(118.054108, -4.05859375, -279.828003),(116.526123, -4.2097168, -272.207001),(112.14212, -4.73706055, -269.575012),(107.718109, -5.20483398, -253.697998),(99.2991028, -4.91870117, -278.429016),(96.7731018, -4.30078125, -273.669006),(184.636108, -1.5612793, -302.152008),(184.569107, -1.55273438, -302.093994),(185.237106, -1.52880859, -301.875),(184.686111, -1.5847168, -302.317993),(221.558105, 0.520019531, -284.52301),(221.66011, 0.634033203, -283.687988),(222.060104, 0.552001953, -284.256012),(221.979111, 0.577148438, -284.078003),(224.20311, 0.717529297, -282.90802),(159.292114, 1.11962891, -260.561005),(162.640106, 1.5402832, -258.997009),(163.618103, 1.64599609, -261.999023),(176.694122, 0.600341797, -287.023987),(167.520111, 2.15795898, -255.692001),(172.370117, 2.71704102, -263.61499),(167.520111, 2.15136719, -257.049988),(182.736115, 1.51391602, -279.983002),(173.640106, 2.86547852, -265.266998),(175.145111, 3.0456543, -266.384003),(176.793121, 3.36547852, -266.966003),(178.49411, 3.45532227, -267.014008),(180.159119, 3.6628418, -266.528992),(200.414108, 4.64257813, -256.080994),(206.090103, 2.38745117, -272.044983),(201.642105, 4.79711914, -254.876007),(202.437103, 5.01489258, -253.243011),(202.809113, 5.265625, -251.399002),(212.636108, 3.20092773, -265.694),(211.221115, 2.75219727, -269.046021),(202.767105, 5.51879883, -249.56601),(202.324112, 5.74438477, -247.960999),(197.732117, 5.96069336, -239.686996),(-78.2218933, -3.37768555, 117.349976),(-76.736908, -3.37768555, 118.062012),(-76.9898987, -3.38354492, 115.156982),(-49.2778931, -3.52099609, 65.8439941),(-24.3858948, -2.83374023, 239.325989),(-48.0818787, -3.52075195, 66.4830017),(-113.266876, -3.19726563, 182.807007),(-113.392914, -3.18237305, 189.502014),(-47.6168823, -3.52075195, 66.7250061),(-40.6268921, -3.57641602, 54.5069885),(-27.5148926, -3.77734375, 27.1170044),(-42.3188782, -3.57543945, 53.4599915),(-26.3108826, -3.77905273, 27.7409973),(-26.0868835, -3.77929688, 27.848999),(-23.3718872, -3.81665039, 22.95401),(-18.0748901, -2.96630859, 228.700012),(-15.9008789, -3.93603516, 6.45098877),(-24.7428894, -3.81518555, 22.1849976),(-5.12289429, -3.25073242, 205.85199),(-14.6929016, -3.93774414, 7.06799316),(-14.4169006, -3.93798828, 7.22198486),(-1.06689453, -2.94140625, 232.21698),(-6.73989868, -4.04418945, -6.73699951),(6.46911621, -3.13354492, 216.690979),(32.203125, -2.74536133, 251.518005),(40.8731079, -2.9206543, 237.505981),(33.8271179, -2.72973633, 252.960022),(34.6551208, -2.70996094, 254.710999),(34.9360962, -2.69018555, 256.409973),(35.0281067, -2.66772461, 258.288025),(42.5991211, -2.91821289, 237.85498),(34.9211121, -2.67456055, 257.69397),(34.8611145, -2.66870117, 258.202026),(44.3921204, -2.92407227, 237.528992),(45.9941101, -2.93310547, 236.872009),(47.6751099, -2.94580078, 235.982971),(47.1451111, -2.94213867, 236.224976),(47.5861206, -2.94604492, 235.934021),(-6.94989014, -4.04345703, -6.74200439),(-6.7388916, -4.04467773, -6.80700684),(-2.5809021, -3.42016602, 132.481018),(26.5811157, -3.4140625, 148.500977),(88.5501099, -2.29077148, -258.390991),(68.2621155, -4.30102539, 3.22399902),(74.1461182, -4.35791016, -2.87701416),(81.0310974, -4.41015625, -7.30999756),(88.5700989, -4.45605469, -10.0690002),(-6.94088745, -4.05834961, -9.49499512),(-8.05389404, -4.04296875, -7.51400757),(-35.3418884, -4.02270508, -24.7890015),(92.3421021, -3.234375, -268.775024),(96.4131165, -4.49414063, -11.1490173),(88.3561096, -2.25927734, -261.257019),(87.2281189, -1.98339844, -259.130005),(93.9661255, -3.61767578, -269.067993),(94.368103, -3.71240234, -269.135986),(96.7732239, -4.30078125, -273.668976),(100.983124, -4.51147461, -10.8540039),(107.718109, -5.20483398, -253.697998),(112.14212, -4.73706055, -269.575012),(105.512115, -4.47412109, -55.4530029),(105.23111, -4.27294922, -10.1210022),(106.262115, -4.40576172, -61.9140015),(105.967102, -4.37646484, -48.7420044),(124.570099, -2.35302734, -95.269989),(109.585114, -3.66967773, -8.79699707),(107.593109, -4.1184082, -42.0630188),(110.354095, -3.70678711, -35.697998),(152.304108, 0.411621094, -229.177002),(114.468109, -2.98999023, -6.72799683),(112.858124, -3.34228516, -31.6499939),(115.818115, -2.91772461, -28.0029907),(129.630096, -1.75488281, -100.515015),(145.631104, 1.359375, 8.83898926),(136.385101, -0.942138672, -104.597015),(119.279114, -2.42700195, -24.8259888),(123.289124, -1.86401367, -22.1900024),(144.061096, -0.00854492188, -107.287018),(151.887115, 0.950927734, -108.358002),(151.825104, 2.12182617, -7.38699341),(150.945099, 2.11206055, 13.552002),(155.0401, 2.70043945, 18.7799988),(153.874115, 1.19580078, -108.34201),(153.720123, 0.570556641, -232.352005),(158.914124, 3.10424805, -5.14901733),(157.758118, 3.10449219, 24.8070068),(156.197113, 0.867431641, -234.115997),(158.940125, 3.30395508, 31.9169922),(166.598114, 4.16333008, -4.6000061),(174.366119, 5.1015625, -5.62399292),(155.804108, 1.43457031, -108.195007),(181.709106, 5.9597168, -8.10400391),(156.9151, 1.38745117, -145.81601),(157.663116, 1.66503906, -107.911011),(159.558105, 1.2800293, -234.469009),(158.842102, 1.66967773, -136.708008),(157.303101, 1.3894043, -155.221008),(159.436096, 1.88574219, -107.485992),(160.020111, 1.67919922, -164.470001),(163.074097, 2.23242188, -128.350006),(164.158112, 1.85058594, -233.763),(186.090103, 4.67211914, -209.723999),(185.036118, 4.48071289, -222.296997),(185.920105, 4.61352539, -217.35701),(185.920105, 4.59985352, -220.180008),(168.9711, 3.08642578, -102.351013),(164.801117, 2.45654297, -126.045013),(166.737122, 2.70581055, -123.860992),(168.881104, 2.98022461, -121.812012),(171.232117, 3.27929688, -119.908997),(201.794113, 7.21875, -84.8150024),(177.178101, 4.02758789, -116.789001),(207.120117, 7.7956543, -101.078003),(207.35611, 7.92578125, -80.4580078),(214.204117, 8.68188477, -98.4670105),(211.358109, 8.44604492, -74.9940186),(213.940109, 8.79223633, -69.2330017),(215.240112, 9.03442383, -63.9819946),(222.34111, 9.68969727, -97.5050049),(215.39711, 9.12817383, -60.052002),(215.495117, 9.14135742, -59.9949951),(230.918106, 10.7416992, -98.6170044),(239.414108, 11.7717285, -102.179993),(239.325104, 11.760498, -102.227997),(96.7731018, -4.30078125, -273.669006),(97.6348877, -4.51171875, -275.292969),(99.2991028, -4.91870117, -278.429016),(102.261108, -5.64306641, -284.011993),(116.526123, -4.2097168, -272.207001),(117.882111, -4.07543945, -278.971985),(102.072113, -5.6003418, -284.355011),(102.072113, -5.61425781, -287.122986),(101.045105, -5.36303711, -285.186005),(200.269104, 6.35864258, -222.309998),(200.782104, 6.42431641, -221.766998),(212.501114, 7.90209961, -215.044006),(209.303116, 7.53540039, -209.395004),(197.24411, 6.01489258, -216.299011),(193.632111, 5.56079102, -218.121002),(193.882111, 5.59008789, -218.416),(189.952118, 5.11523438, -216.428009),(189.636108, 5.07617188, -216.475006),(187.329117, 4.81420898, -211.876007),(158.428101, 3.27880859, 40.3930054),(158.5401, 3.29443359, 40.4549866),(188.209106, 6.68969727, -11.8720093),(188.117111, 6.67749023, -11.9240112),(-89.8019104, -2.30175781, 278.562012),(-51.5119019, -2.09423828, 299.263),(-89.7189026, -2.30419922, 278.375),(-69.8158875, -2.24975586, 284.617981),(-59.2408752, -2.19384766, 290.221008),(-53.6218872, -2.32495117, 279.682983),(-64.1929016, -2.38061523, 274.078979),(-44.9848938, -2.47924805, 267.406006),(-48.1188965, -2.13964844, 295.723999),(-43.598877, -2.17260742, 293.33197),(-55.5358887, -2.53540039, 261.791016),(-39.3658752, -2.61010742, 256.865967),(-49.9358826, -2.66625977, 251.257019),(-38.3508911, -2.19140625, 292.179993),(-105.430878, -3.03149414, 215.835022),(-129.257904, -2.64282227, 256.982971),(-129.397919, -2.64428711, 257.156006),(-28.098877, -2.59545898, 259.051025),(-29.3009033, -2.53271484, 264.244019),(-32.7709045, -2.19506836, 292.362),(-29.3278809, -2.47216797, 269.333984),(-27.2588806, -2.18139648, 293.968994),(-28.0158997, -2.41625977, 274.143005),(-25.1988831, -2.36743164, 278.495972),(-20.7138977, -2.32763672, 282.213989)
            }.Select(i => new Vector3((float)i.Item1, (float)i.Item2, (float)i.Item3)).ToArray(),
            triangles: new[]
            {
                0,1,2,3,4,1,5,6,3,7,8,9,8,7,10,7,11,10,11,12,10,13,10,12,14,8,10,15,8,14,16,15,14,17,16,14,18,16,17,19,20,21,20,19,22,20,22,23,24,23,22,25,23,24,26,25,24,27,26,24,28,27,24,29,28,24,30,28,29,31,28,30,32,28,31,33,28,32,34,33,32,35,33,34,36,35,34,37,35,36,38,35,37,37,36,39,40,39,36,41,38,37,42,38,41,43,38,42,44,43,42,45,38,43,38,45,46,46,45,47,45,48,47,48,49,47,49,50,47,50,51,47,51,52,47,52,53,47,53,54,47,47,54,55,55,54,19,54,56,19,19,56,22,22,56,57,57,56,58,58,56,59,59,56,60,56,61,60,61,62,60,62,63,60,64,60,63,62,65,63,66,63,65,67,68,69,68,67,70,71,72,73,74,73,72,74,72,75,76,77,78,79,78,77,80,81,82,83,82,81,84,83,81,85,83,84,86,83,85,87,83,86,88,83,87,89,83,88,90,83,89,91,90,89,92,90,91,93,90,92,90,93,94,95,90,94,93,96,94,96,97,94,98,94,97,99,100,101,102,101,100,102,100,103,104,102,103,100,105,103,106,103,105,107,104,103,108,107,103,109,108,103,110,108,109,111,109,103,112,111,103,113,112,103,114,113,103,114,115,113,116,113,115,117,115,114,118,115,117,119,118,117,120,117,114,121,119,117,122,117,120,123,122,120,124,122,123,125,124,123,126,124,125,127,124,126,128,124,127,129,124,128,127,130,128,131,128,130,132,129,128,133,132,128,134,133,128,135,133,134,136,135,134,137,121,138,138,121,117,117,139,138,139,117,140,139,141,138,142,141,139,143,141,142,144,141,143,145,141,144,138,141,146,146,147,138,148,146,141,145,149,141,150,149,145,149,151,141,152,141,151,153,149,150,154,153,150,155,154,150,156,155,150,157,155,156,158,155,157,159,157,156,160,159,156,161,157,159,159,160,162,161,163,157,164,162,160,165,162,164,166,165,164,167,157,163,168,166,164,169,166,168,170,169,168,171,167,163,172,170,168,173,167,171,174,170,172,175,174,172,176,167,173,177,167,176,178,175,172,179,178,172,180,178,179,181,167,177,182,167,181,183,178,180,184,183,180,185,182,181,186,183,184,187,183,186,187,186,188,189,185,181,188,186,190,191,185,189,192,191,189,185,191,193,194,191,192,195,193,191,196,194,192,197,193,195,198,194,196,199,193,197,200,199,197,201,199,200,202,201,200,203,201,202,204,198,196,205,198,204,206,205,204,207,206,204,208,207,204,209,208,204,210,208,209,211,210,209,212,211,209,213,211,212,214,213,212,215,213,214,216,213,215,217,213,216,218,217,216,219,217,218,220,217,219,221,220,219,222,220,221,223,155,224,224,225,226,227,226,225,227,228,226,226,228,229,228,230,229,231,229,230,232,233,234,235,234,233,233,236,235,235,236,237,236,238,237,237,238,239,238,240,239,241,239,240,242,243,186,244,186,243,190,186,244,245,190,244,246,247,248,249,248,247,250,249,247,251,250,247,249,252,248,247,253,251,254,253,247,255,253,254,253,256,251,252,251,256,257,253,255,256,258,252,252,258,248,259,257,255,258,260,248,248,260,261,262,261,260,263,260,258,257,263,258,259,263,257,264,263,259,265,264,259,266,264,265,265,267,266,268,266,267,269,268,267,270,269,267
            }
        );

        public static readonly (Vector3[] positions, int[] triangles) Issue134_Case5 = (
            positions: new[]
            {
                (51.181488, 2.60620117, -132.923706),(81.1235046, 6.37426758, -117.212708),(53.5274963, 2.87548828, -137.034698),(82.8325043, 6.56811523, -120.717712),(88.2075043, 7.26049805, -114.601715),(89.8874969, 7.44799805, -118.570709),(96.3444977, 8.26831055, -113.639709),(96.9205017, 8.31616211, -118.347717),(104.921494, 9.3203125, -114.751709),(104.004501, 9.18212891, -119.890717),(111.217499, 10.0559082, -123.042694),(113.328491, 10.3391113, -118.362701),(118.633499, 10.947998, -127.645721),(113.417496, 10.3503418, -118.314697),(118.691498, 10.9550781, -127.614716),(-2.70748901, -3.28540039, -38.324707),(25.8284912, 0.700439453, -23.521698),(-0.493499756, -3.00268555, -42.2087097),(26.7374878, 0.8046875, -27.3217163),(32.917511, 1.68310547, -21.2846985),(34.6994934, 1.93310547, -25.0077209),(40.6015015, 2.74169922, -20.7357178),(42.7974854, 2.93164063, -25.0007019),(48.3695068, 3.67993164, -21.7597046),(50.911499, 3.89331055, -27.0386963),(55.7124939, 4.53833008, -24.2397156),(58.9214935, 4.80834961, -30.8557129),(62.1204987, 5.25610352, -28.0587158),(66.7075043, 5.66748047, -36.1896973),(62.2124939, 5.26831055, -28.0067139),(66.8184967, 5.68212891, -36.1296997),(40.3515015, 1.36425781, -113.883698),(72.7304993, 5.43530273, -97.6437073),(42.9744873, 1.66503906, -118.485718),(75.7975006, 5.79736328, -100.949707),(78.536499, 6.17431641, -92.8997192),(81.3594971, 6.50439453, -96.5927124),(82.3455048, 6.67211914, -87.1307068),(85.361496, 7.0246582, -91.1287231),(84.5124969, 7.01586914, -80.844696),(85.3934937, 7.24389648, -74.5497131),(87.9425049, 7.37060547, -85.3677063),(89.4004974, 7.70678711, -76.1867065),(89.2424927, 7.61279297, -80.1166992),(89.4985046, 7.7199707, -76.1296997),(85.3444977, 7.34667969, -68.8037109),(-13.1425171, -4.61694336, -19.9347229),(17.7745056, -0.302246094, -4.60571289),(-11.5285034, -4.41137695, -22.8627014),(19.634491, -0.0620117188, -7.29571533),(24.4735107, 0.6484375, 1.7203064),(24.9484863, 0.690673828, -2.58270264),(28.2825012, 1.20825195, 8.96029663),(29.0434875, 1.27905273, 2.64529419),(29.818512, 1.45922852, 16.6102905),(31.7615051, 1.68310547, 8.67230225),(32.431488, 1.85742188, 24.2583008),(32.943512, 1.88256836, 15.7822876),(29.6965027, 1.48217773, 24.1612854),(32.5434875, 1.87304688, 24.320282),(28.6554871, 1.37670898, 31.1772766),(28.5314941, 1.35961914, 31.1062927),(-155.324493, -3.89355469, 253.19928),(-154.012512, -3.83764648, 258.008301),(-155.297516, -3.95410156, 248.109314),(-154.09549, -4.0168457, 242.916321),(-138.259491, -4.37915039, 213.767273),(-151.195496, -3.78881836, 262.361267),(-147.91449, -3.87939453, 255.011292),(-146.792511, -3.91577148, 252.053284),(-127.063507, -4.36279297, 216.082275),(-148.167511, -3.84423828, 257.958313),(-146.71051, -3.74902344, 266.079285),(-147.600494, -3.81201172, 260.711304),(-146.261505, -3.78515625, 263.086304),(-128.5065, -3.453125, 292.509277),(-153.255493, -3.6027832, 277.83429),(-144.199493, -3.76586914, 264.896301),(-120.624512, -3.62036133, 279.115295),(-126.303497, -3.42431641, 295.141296),(-125.042511, -3.390625, 298.060303),(-124.471497, -3.36328125, 300.42627),(-124.380493, -3.35546875, 301.081299),(-117.926514, -3.61499023, 279.800293),(-115.168488, -3.62329102, 279.311279),(-112.729492, -3.63867188, 278.235291),(-110.988495, -3.65332031, 277.159302),(-110.694489, -3.65600586, 276.943298),(-128.577515, -4.84155273, 116.346313),(-99.4154968, -4.83544922, 132.366272),(-57.7344971, -5.72241211, -12.9107056),(-97.2545166, -4.8425293, 130.241272),(-94.5375061, -4.84790039, 128.920288),(-91.4964905, -4.85205078, 128.386292),(-88.3615112, -4.85473633, 128.621277),(-80.98349, -5.00048828, 104.102295),(-85.3665161, -4.85571289, 129.605286),(-80.1004944, -5.01806641, 101.467285),(-13.1425171, -4.61694336, -19.9347229),(-51.8504944, -5.77929688, -19.0117188),(-44.9655151, -5.83154297, -23.4447021),(-80.98349, -4.98608398, 106.734314),(-80.1654968, -4.97631836, 109.233276),(-44.4085083, -5.8347168, -23.6487122),(-57.4244995, -4.88452148, 143.947266),(-37.4265137, -5.87744141, -26.2037048),(-78.5945129, -4.97070313, 111.467285),(-76.338501, -4.97021484, 113.306274),(-29.5834961, -5.91552734, -27.2837219),(-49.5385132, -4.9987793, 128.685303),(-25.0134888, -5.93286133, -26.9877014),(-20.7655029, -5.69433594, -26.2546997),(-16.411499, -5.09106445, -24.9306946),(-11.5285034, -4.41137695, -22.8627014),(-53.3015137, -4.88256836, 147.512268),(-50.3775024, -4.87207031, 151.737305),(-48.6625061, -4.85327148, 156.565308),(-44.3034973, -5.01220703, 130.200317),(-48.1654968, -4.8215332, 161.941284),(-38.8615112, -5.03417969, 130.331299),(-33.4205017, -5.06298828, 129.133301),(-28.1895142, -5.09790039, 126.663269),(-23.4064941, -5.13720703, 122.997314),(-48.8364868, -4.80761719, 167.846313),(-48.8965149, -4.80786133, 167.811279),(-20.4844971, -5.89550781, -71.5877075),(-20.0295105, -5.79785156, -64.876709),(-19.7344971, -5.82714844, -78.0487061),(-18.4035034, -5.53979492, -58.1977234),(-1.42651367, -3.77441406, -111.404694),(-15.6425171, -5.12817383, -51.8327026),(-13.1384888, -4.76367188, -47.7857056),(-10.1784973, -4.33911133, -44.1387024),(-6.71749878, -3.84838867, -40.9606934),(-2.70748901, -3.28540039, -38.324707),(-0.493499756, -3.00268555, -42.2087097),(3.63348389, -3.17626953, -116.649719),(40.3515015, 1.36425781, -113.883698),(10.3884888, -2.36328125, -120.730713),(18.0644836, -1.42993164, -123.421722),(25.8905029, -0.470458984, -124.492706),(27.8775024, -0.225585938, -124.476715),(29.8074951, 0.0131835938, -124.328705),(31.6665039, 0.243652344, -124.044708),(33.4394836, 0.464355469, -123.620697),(42.9744873, 1.66503906, -118.485718)
            }.Select(i => new Vector3((float)i.Item1, (float)i.Item2, (float)i.Item3)).ToArray(),
            triangles: new[]
            {
                0,1,2,3,2,1,4,3,1,5,3,4,6,5,4,7,5,6,8,7,6,9,7,8,10,9,8,11,10,8,12,10,11,13,12,11,14,12,13,15,16,17,18,17,16,19,18,16,20,18,19,21,20,19,22,20,21,23,22,21,24,22,23,25,24,23,26,24,25,27,26,25,28,26,27,29,28,27,30,28,29,31,32,33,34,33,32,35,34,32,36,34,35,37,36,35,38,36,37,39,38,37,40,38,39,41,38,40,41,40,42,43,41,42,42,40,44,45,44,40,46,47,48,49,48,47,50,49,47,51,49,50,52,51,50,53,51,52,54,53,52,55,53,54,55,54,56,55,56,57,54,58,56,56,58,59,59,58,60,61,60,58,62,63,64,65,64,63,66,65,63,67,66,63,68,66,67,69,66,68,70,66,69,71,68,67,67,72,71,73,71,72,74,73,72,74,72,75,76,75,72,77,74,75,78,77,75,79,78,75,80,78,79,81,78,80,82,78,81,83,78,82,84,83,82,85,84,82,86,85,82,87,86,82,88,89,90,91,90,89,92,90,91,93,90,92,94,90,93,95,90,94,96,95,94,97,90,95,98,90,97,99,90,98,100,99,98,95,96,101,101,96,102,103,100,98,104,102,96,105,103,98,106,102,104,107,106,104,108,105,98,109,107,104,110,108,98,111,110,98,112,111,98,113,112,98,114,109,104,115,109,114,116,109,115,117,109,116,118,117,116,117,118,119,119,118,120,120,118,121,121,118,122,122,118,123,124,123,118,125,126,127,128,127,126,129,127,128,130,129,128,131,129,130,132,129,131,133,129,132,134,129,133,135,129,134,136,129,135,137,136,135,138,136,137,139,138,137,140,139,137,141,140,137,142,141,137,143,142,137,144,143,137,145,144,137
            }
        );

        public static readonly (Vector3[] positions, int[] triangles, Vector2[] uvs) Issue134_Case10 = (
            positions: new[]
            {
                (-17.6940002, 0, 9.54500008),(-4.53900003, 0, 23.2539997),(0.871999979, 0, 18.0620003),(-12.283, 0, 4.35200024),(-12.283, 0, 4.35200024),(0.871999979, 0, 18.0620003),(6.28299999, 0, 12.8690004),(-6.87099981, 0, -0.838999987),(-12.283, 0, 4.35300016),(-17.6940002, 0, 9.54500008),(-4.53900003, 0, 23.2539997),(0.871999979, 0, 18.0620003),(25.1049995, 0, 43.3160019),(10.6739998, 0, 57.1629982),(-70.3330002, 0, -27.2560005),(-55.9020004, 0, -41.1040001),(39.5349998, 0, 29.4680004),(6.28299999, 0, 12.8690004),(-6.87099981, 0, -0.838999987),(-41.4710007, 0, -54.9510002),(129.244995, 0, 151.843002),(114.814003, 0, 165.690994),(10.6739998, 0, 57.1629982),(25.1049995, 0, 43.3160019),(143.675995, 0, 137.996002),(39.5349998, 0, 29.4680004),(276.184998, 0, 294.141998),(270.773987, 0, 299.334015),(257.618988, 0, 285.625),(263.029999, 0, 280.432007),(270.773987, 0, 299.334015),(265.362, 0, 304.527008),(252.207001, 0, 290.817993),(257.618988, 0, 285.625),(328.824005, 0, 330.944),(314.393005, 0, 344.791992),(270.773987, 0, 299.334015),(276.184998, 0, 294.141998),(263.029999, 0, 280.432007),(257.618988, 0, 285.625),(233.386002, 0, 260.371002),(247.817001, 0, 246.524002),(252.207001, 0, 290.817993),(265.362, 0, 304.527008),(299.962006, 0, 358.639008),(218.955002, 0, 274.218994),(247.817001, 0, 246.524002),(233.386002, 0, 260.371002),(218.955002, 0, 274.218994)
            }.Select(i => new Vector3((float)i.Item1, (float)i.Item2, (float)i.Item3)).ToArray(),
            triangles: new[]
            {
                3,0,1,1,2,3,7,4,5,5,6,7,8,15,14,13,12,11,9,8,14,13,11,10,10,9,14,14,13,10,16,19,15,15,8,18,17,11,12,16,15,18,17,12,16,16,18,17,20,23,22,22,21,20,24,25,23,23,20,24,26,29,28,28,27,26,30,33,32,32,31,30,41,40,39,37,36,35,35,34,41,41,39,38,37,35,41,41,38,37,39,40,45,45,44,35,35,36,43,42,39,45,45,35,43,43,42,45,46,24,20,20,47,46,47,20,21,21,48,47
            },
            uvs: new[]
            {
                (0.964848161, 0.916015267), (0.964848816, 0.996092319), (1.0000006, 0.996093094), (1.0000031, 0.916012883), (0.824221969, 0.916013062), (0.824219346, 0.996093094), (0.859374523, 0.996090949), (0.859373748, 0.916019559), (0.48828131, 0.246094078), (0.521236062, 0.246093363), (0.521235466, 0.320311129), (0.488280684, 0.320311874), (0.488281012, 0.457030803), (0.576170802, 0.457028955), (0.576173067, 2.77057757E-06), (0.488280088, 1.70635565E-06), (0.576171219, 0.457026988), (0.521239698, 0.320309818), (0.521239221, 0.246097535), (0.576172292, 3.46985553E-06), (0.136717856, 0.626708925), (0.224610701, 0.626710057), (0.224608421, -2.38012103E-06), (0.136718541, -4.99054011E-07), (0.224609524, 0.626710832), (0.22460863, -4.51178676E-06), (0.894533575, 0.916018724), (0.929685473, 0.91601938), (0.92968595, 0.996096492), (0.894530892, 0.996098697), (0.894529283, 0.91601944), (0.9296875, 0.916019917), (0.929688036, 0.996097028), (0.894529581, 0.996096432), (0.576171935, 3.11994154E-06), (0.488279045, 2.06690652E-06), (0.488283157, 0.246097252), (0.521238089, 0.246096551), (0.521240473, 0.320317119), (0.488282591, 0.320315063), (0.488282949, 0.457033932), (0.576172829, 0.457032204), (0.52124083, 0.320315659), (0.521240354, 0.246097833), (0.576173365, 3.76633034E-06), (0.576172411, 0.457032859), (0.224610299, 1.00738055E-06), (0.136720434, 2.86597401E-06), (0.224609941, 1.74273634E-06)
            }.Select(i => (Vector2)math.float2((float)i.Item1, (float)i.Item2)).ToArray()
        );
    }
}